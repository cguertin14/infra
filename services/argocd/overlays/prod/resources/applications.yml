# In this file, all applications running in
# our production cluster are listed. Simply add
# a new 'Application' resource to this list to
# sync them with Git.
---
apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: argocd
  namespace: argocd
spec:
  project: production
  destination:
    namespace: argocd
    server: https://kubernetes.default.svc
  source:
    repoURL: https://github.com/cguertin14/infra
    targetRevision: main
    path: services/argocd/overlays/prod
  syncPolicy:
    automated:
      selfHeal: true
      prune: true
---
apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: canal
  namespace: argocd
spec:
  project: production
  destination:
    namespace: kube-system
    server: https://kubernetes.default.svc
  source:
    repoURL: https://github.com/cguertin14/infra
    targetRevision: main
    path: services/networking/canal
  syncPolicy:
    automated:
      selfHeal: true
      prune: true
---
apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: metallb
  namespace: argocd
spec:
  project: production
  destination:
    namespace: metallb-system
    server: https://kubernetes.default.svc
  source:
    repoURL: https://github.com/cguertin14/infra
    targetRevision: main
    path: services/networking/metallb
  syncPolicy:
    automated:
      selfHeal: true
      prune: true
---
apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: nfs-client
  namespace: argocd
spec:
  project: production
  destination:
    namespace: synology-nfs
    server: https://kubernetes.default.svc
  source:
    repoURL: https://github.com/cguertin14/infra
    targetRevision: main
    path: services/nfs-client
  syncPolicy:
    automated:
      selfHeal: true
      prune: true
---
apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: monitoring
  namespace: argocd
spec:
  project: production
  destination:
    namespace: monitoring
    server: https://kubernetes.default.svc
  source:
    repoURL: https://github.com/cguertin14/infra
    targetRevision: main
    path: services/monitoring/overlays/prod
  syncPolicy:
    automated:
      selfHeal: true
      prune: true
---
apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: cert-manager
  namespace: argocd
spec:
  project: production
  destination:
    namespace: cert-manager
    server: https://kubernetes.default.svc
  source:
    repoURL: https://github.com/cguertin14/infra
    targetRevision: main
    path: services/cert-manager/overlays/prod
  syncPolicy:
    automated:
      selfHeal: true
      prune: true
---
apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: traefik
  namespace: argocd
spec:
  project: production
  destination:
    namespace: kube-system
    server: https://kubernetes.default.svc
  source:
    repoURL: https://github.com/cguertin14/infra
    targetRevision: main
    path: services/traefik/overlays/prod
  syncPolicy:
    automated:
      selfHeal: true
      prune: true
---
apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: pihole
  namespace: argocd
spec:
  project: production
  destination:
    namespace: pihole
    server: https://kubernetes.default.svc
  source:
    repoURL: https://github.com/cguertin14/infra
    targetRevision: main
    path: services/pihole/overlays/prod
  syncPolicy:
    automated:
      selfHeal: true
      prune: true
---
apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: blog
  namespace: argocd
spec:
  project: production
  destination:
    namespace: blog
    server: https://kubernetes.default.svc
  source:
    repoURL: https://github.com/cguertin14/infra
    targetRevision: main
    path: services/blog/overlays/prod
  syncPolicy:
    automated:
      selfHeal: true
      prune: true
---
apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: argo-rollouts
  namespace: argocd
spec:
  project: production
  destination:
    namespace: argo-rollouts
    server: https://kubernetes.default.svc
  source:
    repoURL: https://github.com/cguertin14/infra
    targetRevision: main
    path: services/operators/argo-rollouts
  syncPolicy:
    automated:
      selfHeal: true
      prune: true
---
apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: kured
  namespace: argocd
spec:
  project: production
  destination:
    namespace: kured
    server: https://kubernetes.default.svc
  source:
    repoURL: https://github.com/cguertin14/infra
    targetRevision: main
    path: services/kured/overlays/prod
  syncPolicy:
    automated:
      selfHeal: true
      prune: true
---
apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: linkerd2
  namespace: argocd
spec:
  project: production
  destination:
    namespace: kured
    server: https://kubernetes.default.svc
  source:
    repoURL: https://github.com/cguertin14/infra
    targetRevision: main
    path: services/linkerd2/overlays/prod
  syncPolicy:
    automated:
      selfHeal: true
      prune: true
  # This solves a bug where argo-cd will mark the application as healthy but OutOfSync
  # this occurs because cert-manager updates the status field in the CRD. This field
  # makes argo-cd diff's think it is out of sync.
  ignoreDifferences:
  - group: apiextensions.k8s.io
    kind: CustomResourceDefinition
    name: certificaterequests.cert-manager.io
    jsonPointers:
      - /status
  - group: apiextensions.k8s.io
    kind: CustomResourceDefinition
    name: certificates.cert-manager.io
    jsonPointers:
      - /status
  - group: apiextensions.k8s.io
    kind: CustomResourceDefinition
    name: challenges.cert-manager.io
    jsonPointers:
      - /status
  - group: apiextensions.k8s.io
    kind: CustomResourceDefinition
    name: challenges.acme.cert-manager.io
    jsonPointers:
      - /status
  - group: apiextensions.k8s.io
    kind: CustomResourceDefinition
    name: clusterissuers.cert-manager.io
    jsonPointers:
      - /status
  - group: apiextensions.k8s.io
    kind: CustomResourceDefinition
    name: issuers.cert-manager.io
    jsonPointers:
      - /status
  - group: apiextensions.k8s.io
    kind: CustomResourceDefinition
    name: orders.acme.cert-manager.io
    jsonPointers:
      - /status
---
apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: linkerd-viz
  namespace: argocd
spec:
  project: production
  destination:
    namespace: kured
    server: https://kubernetes.default.svc
  source:
    repoURL: https://github.com/cguertin14/infra
    targetRevision: main
    path: services/linkerd-viz/overlays/prod
  syncPolicy:
    automated:
      selfHeal: true
      prune: true
