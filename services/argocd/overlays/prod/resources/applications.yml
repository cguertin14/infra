# In this file, all applications running in
# our production cluster are listed. Simply add
# a new 'Application' resource to this list to
# sync them with Git.
---
apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: argocd
  namespace: argocd
spec:
  project: production
  destination:
    namespace: argocd
    server: https://kubernetes.default.svc
  source:
    repoURL: https://github.com/cguertin14/infra
    targetRevision: main
    path: services/argocd/overlays/prod
  syncPolicy:
    automated:
      selfHeal: true
      prune: true
---
apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: cilium
  namespace: argocd
spec:
  project: production
  destination:
    namespace: kube-system
    server: https://kubernetes.default.svc
  source:
    repoURL: https://github.com/cguertin14/infra
    targetRevision: main
    path: services/networking/cilium
  syncPolicy:
    automated:
      selfHeal: true
      prune: true
---
apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: metallb
  namespace: argocd
spec:
  project: production
  destination:
    namespace: metallb-system
    server: https://kubernetes.default.svc
  source:
    repoURL: https://github.com/cguertin14/infra
    targetRevision: main
    path: services/networking/metallb
  syncPolicy:
    automated:
      selfHeal: true
      prune: true
---
apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: nfs-client
  namespace: argocd
spec:
  project: production
  destination:
    namespace: synology-nfs
    server: https://kubernetes.default.svc
  source:
    repoURL: https://github.com/cguertin14/infra
    targetRevision: main
    path: services/nfs-client
  syncPolicy:
    automated:
      selfHeal: true
      prune: true
---
apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: nfs-media-client
  namespace: argocd
spec:
  project: production
  destination:
    namespace: synology-nfs-media
    server: https://kubernetes.default.svc
  source:
    repoURL: https://github.com/cguertin14/infra
    targetRevision: main
    path: services/nfs-media-client
  syncPolicy:
    automated:
      selfHeal: true
      prune: true
---
apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: monitoring
  namespace: argocd
spec:
  project: production
  destination:
    namespace: monitoring
    server: https://kubernetes.default.svc
  source:
    repoURL: https://github.com/cguertin14/infra
    targetRevision: main
    path: services/monitoring/overlays/prod
  syncPolicy:
    automated:
      selfHeal: true
      prune: true
---
apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: cert-manager
  namespace: argocd
spec:
  project: production
  destination:
    namespace: cert-manager
    server: https://kubernetes.default.svc
  source:
    repoURL: https://github.com/cguertin14/infra
    targetRevision: main
    path: services/cert-manager/overlays/prod
  syncPolicy:
    automated:
      selfHeal: true
      prune: true
---
apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: lululemon-stockchecker
  namespace: argocd
spec:
  project: production
  destination:
    namespace: lululemon-stockchecker
    server: https://kubernetes.default.svc
  source:
    repoURL: https://github.com/cguertin14/infra
    targetRevision: main
    path: services/lululemon-stockchecker/overlays/prod
  syncPolicy:
    automated:
      selfHeal: true
      prune: true
---
apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: nginx-ingress-controller
  namespace: argocd
spec:
  project: production
  destination:
    namespace: kube-system
    server: https://kubernetes.default.svc
  source:
    repoURL: https://github.com/cguertin14/infra
    targetRevision: main
    path: services/nginx-ingress-controller
  syncPolicy:
    automated:
      selfHeal: true
      prune: true
---
apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: oauth2-proxy
  namespace: argocd
spec:
  project: production
  destination:
    namespace: kube-system
    server: https://kubernetes.default.svc
  source:
    repoURL: https://github.com/cguertin14/infra
    targetRevision: main
    path: services/oauth2-proxy
  syncPolicy:
    automated:
      selfHeal: true
      prune: true
---
apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: pihole
  namespace: argocd
spec:
  project: production
  destination:
    namespace: pihole
    server: https://kubernetes.default.svc
  source:
    repoURL: https://github.com/cguertin14/infra
    targetRevision: main
    path: services/pihole/overlays/prod
  syncPolicy:
    automated:
      selfHeal: true
      prune: true
---
apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: blog
  namespace: argocd
spec:
  project: production
  destination:
    namespace: blog
    server: https://kubernetes.default.svc
  source:
    repoURL: https://github.com/cguertin14/infra
    targetRevision: main
    path: services/blog/overlays/prod
  syncPolicy:
    automated:
      selfHeal: true
      prune: true
---
apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: argo-rollouts
  namespace: argocd
spec:
  project: production
  destination:
    namespace: argo-rollouts
    server: https://kubernetes.default.svc
  source:
    repoURL: https://github.com/cguertin14/infra
    targetRevision: main
    path: services/argo-rollouts
  syncPolicy:
    automated:
      selfHeal: true
      prune: true
---
apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: kured
  namespace: argocd
spec:
  project: production
  destination:
    namespace: kured
    server: https://kubernetes.default.svc
  source:
    repoURL: https://github.com/cguertin14/infra
    targetRevision: main
    path: services/kured/overlays/prod
  syncPolicy:
    automated:
      selfHeal: true
      prune: true
---
apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: metrics-server
  namespace: argocd
spec:
  project: production
  destination:
    namespace: kube-system
    server: https://kubernetes.default.svc
  source:
    repoURL: https://github.com/cguertin14/infra
    targetRevision: main
    path: services/metrics-server
  syncPolicy:
    automated:
      selfHeal: true
      prune: true
---
apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: k3supdater
  namespace: argocd
spec:
  project: production
  destination:
    namespace: k3supdater
    server: https://kubernetes.default.svc
  source:
    repoURL: https://github.com/cguertin14/infra
    targetRevision: main
    path: services/k3supdater/overlays/prod
  syncPolicy:
    automated:
      selfHeal: true
      prune: true
---
apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: ddns
  namespace: argocd
spec:
  project: production
  destination:
    namespace: ddns
    server: https://kubernetes.default.svc
  source:
    repoURL: https://github.com/cguertin14/infra
    targetRevision: main
    path: services/ddns/overlays/prod
  syncPolicy:
    automated:
      selfHeal: true
      prune: true
---
apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: educs-topology
  namespace: argocd
spec:
  project: production
  destination:
    namespace: educs
    server: https://kubernetes.default.svc
  source:
    repoURL: https://github.com/cguertin14/infra
    targetRevision: main
    path: services/educs/topology
  syncPolicy:
    automated:
      selfHeal: true
      prune: true
---
apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: educs-network
  namespace: argocd
spec:
  project: production
  destination:
    namespace: educs
    server: https://kubernetes.default.svc
  source:
    repoURL: https://github.com/cguertin14/infra
    targetRevision: main
    path: services/educs/network
  syncPolicy:
    automated:
      selfHeal: true
      prune: true
---
apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: mongodb-operator
  namespace: argocd
spec:
  project: production
  destination:
    namespace: mongodb-operator
    server: https://kubernetes.default.svc
  source:
    repoURL: https://github.com/cguertin14/infra
    targetRevision: main
    path: services/mongodb-operator
  syncPolicy:
    automated:
      selfHeal: true
      prune: true
---
apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: mediaplatform
  namespace: argocd
spec:
  project: production
  destination:
    namespace: mediaplatform
    server: https://kubernetes.default.svc
  source:
    repoURL: https://github.com/cguertin14/infra
    targetRevision: main
    path: services/mediaplatform
  syncPolicy:
    automated:
      selfHeal: true
      prune: true
---
apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: home-assistant
  namespace: argocd
spec:
  project: production
  destination:
    namespace: home-assistant
    server: https://kubernetes.default.svc
  source:
    repoURL: https://github.com/cguertin14/infra
    targetRevision: main
    path: services/home-assistant
  syncPolicy:
    automated:
      selfHeal: true
      prune: true
---
apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: gpu-operator
  namespace: argocd
spec:
  project: production
  destination:
    namespace: gpu-operator
    server: https://kubernetes.default.svc
  source:
    repoURL: https://github.com/cguertin14/infra
    targetRevision: main
    path: services/gpu-operator
  syncPolicy:
    automated:
      selfHeal: true
      prune: true
---
apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: rook
  namespace: argocd
spec:
  project: production
  destination:
    namespace: rook-ceph
    server: https://kubernetes.default.svc
  source:
    repoURL: https://github.com/cguertin14/infra
    targetRevision: main
    path: services/rook
  syncPolicy:
    automated:
      selfHeal: true
      prune: true
---
apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: cloudnative-pg
  namespace: argocd
spec:
  project: production
  destination:
    namespace: cloudnative-pg
    server: https://kubernetes.default.svc
  source:
    repoURL: https://github.com/cguertin14/infra
    targetRevision: main
    path: services/cloudnative-pg
  syncPolicy:
    automated:
      selfHeal: true
      prune: true